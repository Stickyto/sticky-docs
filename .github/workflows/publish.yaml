name: Publish Docker image

on:
  push:
    branches:
      - master

env:
  IMAGE_NAME: sticky-docs
  GHCR_PREFIX: ghcr.io/stickyto

jobs:
  push_to_registry:
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    environment: production
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.GHCR_PREFIX }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ env.GHCR_PREFIX }}/${{ env.IMAGE_NAME }}:latest

      - name: SSH and Pull Docker Image on Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # Pull the latest image
            docker pull ${{ env.GHCR_PREFIX }}/${{ env.IMAGE_NAME }}:latest

            # Stop and remove the existing container if it exists
            docker stop ${{ env.IMAGE_NAME }} || true
            docker rm ${{ env.IMAGE_NAME }} || true

            # Run the new image with custom network settings
            docker run --name ${{ env.IMAGE_NAME }} --net routing -p 3010:3010 -d ${{ env.GHCR_PREFIX }}/${{ env.IMAGE_NAME }}:latest
